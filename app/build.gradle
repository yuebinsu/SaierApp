apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "com.outsource.saier"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86","arm64-v8a","x86_64"
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    signingConfigs {
        release {
            storeFile file("saierKey.jks")
            storePassword "saier123456"
            keyAlias "saierKey"
            keyPassword "saier123456"
        }
        debug {
            storeFile file("saierKey.jks")
            storePassword "saier123456"
            keyAlias "saierKey"
            keyPassword "saier123456"
        }
    }
    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug{
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "USE_CANARY", "true"
        }
    }
    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    // implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation project(':arms')
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //2D地图
    implementation 'com.amap.api:map2d:latest.integration'
    //导航
    implementation 'com.amap.api:navi-3dmap:latest.integration'
    //implementation 'com.amap.api:search:latest.integration'
    //定位
    implementation 'com.amap.api:location:latest.integration'
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    //Butterknife 插件,很多人因为没加这个而报错,切记!!!
    implementation 'com.alibaba:arouter-api:1.2.2'
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.3'
    implementation 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    implementation rootProject.ext.dependencies["retrofit-url-manager"]
    implementation rootProject.ext.dependencies["lifecyclemodel"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]

}
